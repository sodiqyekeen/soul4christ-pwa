<div class="row">
    @*<div class="col-md-6 float-left"> Showing @verses.CurrentPageStartIndex to @verses.CurrentPageLastIndex of @verses.TotalRecords</div>
    <div class="col-md-6 ">
        <nav aria-label="Page navigation example">
            <ul class="pagination">
                @if (verses.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" @onclick="Previous" aria-label="Previous">
                            <span aria-hidden="true">&lt;</span>
                        </a>
                    </li>
                }

                <li class="page-item @prev">
                    <a class="page-link" @onclick="@(async () => await ChangeIndex(1))" aria-label="Previous">
                        <span aria-hidden="true">1</span>
                    </a>
                </li>


                @for (int i = 1; i <= 3; i++)
                {
                    int val = verses.CurrentPage + i;
                    if (val < verses.TotalPages - 1)
                    {
                        <li class="page-item"><a class="page-link" @onclick="@(async () => await ChangeIndex(val))">@val</a></li>
                    }
                }
                <li class="page-item">
                    <a class="page-link" @onclick="@(async () => await ChangeIndex(verses.TotalPages))" aria-label="Next">
                        <span aria-hidden="true">@verses.TotalPages</span>
                    </a>
                </li>
                @if (verses.HasNextPage)
                {
                    <li class="page-item @next">
                        <a class="page-link" @onclick="Next" aria-label="Next">
                            <span aria-hidden="true">&gt;</span>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    </div>*@
</div>

@code {
    //private string prev => verses.HasPreviousPage ? "" : "disabled";
    //private string next => verses.HasNextPage ? "" : "disabled";
}
