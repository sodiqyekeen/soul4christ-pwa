@page "/"
@inject IJSRuntime JSRuntime
@inject HttpClient Http
@inject AppService AppService
@inject Blazored.LocalStorage.ILocalStorageService localStorage

@if (verseForToday != null)
{
    <VerseCard Verse="verseForToday" Title="VERSE OF THE DAY" />
}


@code{
    private Verse verseForToday;
    protected async override Task OnInitializedAsync()
    {
        try
        {
            verseForToday = await GetVerseForToday();
        }
        catch (Exception)
        {
        }
        _ = RequestNotificationSubscriptionAsync();
    }

    async Task RequestNotificationSubscriptionAsync()
    {
        var subscription = await JSRuntime.InvokeAsync<NotificationSubscription>("blazorPushNotifications.requestSubscription");
        if (subscription != null)
        {
            try
            {
                var response = await Http.PutAsJsonAsync("notifications/subscribe", subscription);
                response.EnsureSuccessStatusCode();
            }
            catch (Exception)
            {
                //ex.Redirect();
            }
        }
    }

    private async Task<Verse> GetVerseForToday()
    {
        string key = $"_versefortoday_{DateTime.Now:ddMMyyy}";
        if (await localStorage.ContainKeyAsync(key))
        {
            return await localStorage.GetItemAsync<Verse>(key);
        }
        else
        {
            var verse = await AppService.GetVerseForToday();
            if (verse != null)
                await localStorage.SetItemAsync(key, verse);
            return verse;
        }
    }
}